name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - run: npm ci
    - run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - run: npm ci
    - run: npm run build
    - name: Build Docker Image
      run: docker-compose build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      
    - name: Set SSH config
      run: |
        echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null" > ~/.ssh/config

    - name: Create deploy script
      run: |
        cat << EOF > deploy.sh
          #!/bin/bash

          # Navigate to the app directory
          /opt/myth/app/myth

          # Pull the latest changes
          git pull origin main

          # Build and start the Docker containers
          docker-compose up --build -d

          # Clean up old images
          docker image prune -f

          # Reload Nginx
          sudo systemctl reload nginx
        EOF

    - name: Deploy to VM
      env:
        HOST: ${{ secrets.HOST }}
        DEPLOY_PATH: /opt/myth/app/myth
      run: |
        ssh sp-deploy@$HOST << EOF
          mkdir -p $DEPLOY_PATH
          cd $DEPLOY_PATH
          chmod +x deploy.sh
          ./deploy.sh
          echo "Deployment log:"
          sudo tail -n 50 /var/log/syslog
        EOF
